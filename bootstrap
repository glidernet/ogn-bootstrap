#!/bin/bash
#
# This script is for use with the Open Glider Network FLARM Detection System only
# Any other uses are NOT authorised
# 
# Copyright (c) 2014, Melissa Jenkins, Temeletry Limited (melissa-ogn@temeletry.co.uk)
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
# - Redistributions of source code must retain the above copyright
#   notice, this list of conditions and the following disclaimer.
#
# - Redistributions in binary form must reproduce the above copyright
#   notice, this list of conditions and the following disclaimer in
#   the documentation and/or other materials provided with the
#   distribution.
#
# - This code must only be used as part of OGN (Open Glider Network)
#
# - Neither the name of Temeletry Limited nor the names of its
#   contributors may be used to endorse or promote products derived
#   from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
# FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
# COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
# STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
# OF THE POSSIBILITY OF SUCH DAMAGE.
#
# Code has been sponsored by Temeletry Limited (http://www.temeletry.co.uk)
#

#
# This is a bootstrap script.  It is designed to install the OGN
# software on any operating system installation.  It has been tested
# on BPI and RPI and is believe to work on generic Linux installations
#

downloadpath="https://raw.githubusercontent.com/dbursem/ogn-bootstrap/"

progress() {
    echo ""
    echo -e "\033[32m * $1\033[0m"
}

error() {
    echo "#####################################################"
    echo -e "\033[31m\033[1m ! $2 \033[0m"
}
echo "starting..."

sudo="sudo"
which sudo || {
    if [ `whoami` == 'root' ] ; then
        sudo () {
            $@
        }
        sudo=""
        progress "Not using sudo - running as root"
    else
        error "Please install sudo or run this script as root"
        exit 1
    fi
}

    

if [ "$1" == "" ] ; then
    progress "Adding ogn user and installing as that"

    if [ ! -e /home/ogn ]; then

        sudo useradd -m -G `groups|tr ' ' ,` ogn || {
            progress "unable to add ogn user?!"
            exit
        }

        echo "ogn:ogn" | sudo chpasswd

        progress "Updating package information"
        sudo apt-get update
        
        progress "Updating install packages"
        sudo apt-get -y upgrade
        sudo apt-get -y dist-upgrade
        
    else

        progress "using existing ogn user"

    fi

    progress "Installing menu helper"
    sudo apt-get -y install dialog 
    dialog --yesno "Do you wish to use online configuration" 0 0
    online=$?

    dialog --yesno "Do you wish to upgrade the operating system (highly recommended, but not available on all platforms)" 0 0
    upgrade=$?

    progress "relaunching script"
    abs_path="$(readlink -f `dirname $0`)/$(basename $0)"
    exec $sudo su -c "/bin/bash $abs_path $online $upgrade $@" root
    exit 0
fi

upgrade=$2

if [ "$upgrade" != "1" ] ; then

    if [ -e /usr/bin/rpi-update ] ; then
        progress "Updating Operating System (rpi-update)"
        rpi-update
        updated=1
    elif [ `which do-release-upgrade` != "" ] ; then
        progress "Updating Operating System (do-release-upgrade)"
        do-release-upgrade
        updated=1
    else
        progress "No automatic OS-upgrade available"
    fi
    
fi

## capture if we are doing online config or not
online=$1

## dependencies
progress "Installing dependencies"
apt-get -y install git cmake libusb-1.0-0-dev libconfig-dev fftw3-dev libjpeg-dev libconfig9 procserv telnet ntp curl dialog openssl sudo make gcc rtl-sdr

cd /home/ogn

# make sure the mod probe stuff is blocked properly on the pi
# necessary not only on RPi, and wont hurt anyway

#if [ -e /usr/bin/rpi-update ] ; then
    progress "Blocking unwanted SDR stuff"
    
    touch /etc/modprobe.d/rtl-glidernet-blacklist.conf
    echo "blacklist rtl2832" >> /etc/modprobe.d/rtl-glidernet-blacklist.conf
    echo "blacklist r820t"  >> /etc/modprobe.d/rtl-glidernet-blacklist.conf
    echo "blacklist rtl2830"  >> /etc/modprobe.d/rtl-glidernet-blacklist.conf
    echo "blacklist dvb_usb_rtl28xxu"  >> /etc/modprobe.d/rtl-glidernet-blacklist.conf
    ## I had to add (one of) these lines as well on my OrangePi running Jessie
    echo "blacklist dvb_usb_rtl2832u"  >> /etc/modprobe.d/rtl-glidernet-blacklist.conf
    echo "blacklist dvb_usb_rtl2830u"  >> /etc/modprobe.d/rtl-glidernet-blacklist.conf
#fi

#install libjpeg8 as gsm_scan depends on this
LIBJPG_OK=$(sudo ldconfig -p | grep libjpeg.so.8)
if [ "" == "$LIBJPG_OK" ] ; then
    progress "installing older version of libjpeg for gsm_scan"
    architecture=`dpkg --print-architecture`
    wget "http://ftp.nl.debian.org/debian/pool/main/libj/libjpeg8/libjpeg8_8d1-2_"${architecture}".deb"
    sudo dpkg -i "libjpeg8_8d1-2_"${architecture}".deb"
fi

progress "Adding system startup scripts"
 curl ${downloadpath}"rtlsdr-ogn" -R -# -o /etc/init.d/rtlsdr-ogn
 curl ${downloadpath}"rtlsdr-ogn.conf" -R -# -o /etc/rtlsdr-ogn.conf
 chmod +x /etc/init.d/rtlsdr-ogn

progress "Installing updater and using it to install RTLSDR"
curl ${downloadpath}"update" -R -# -o /home/ogn/update
chmod +x /home/ogn/update
 
# if we don't have a configuration file then make a dummy one, we also need to make the rtlsdr-ogn
# symlink or it will get confused
if [ ! -e /home/ogn/rtlsdr-ogn ] ; then
    mkdir /home/ogn/rtlsdr-ogn-bootstrap
    (cd /home/ogn; ln -s rtlsdr-ogn-bootstrap rtlsdr-ogn)
fi;
if [ ! -e /home/ogn/rtlsdr-ogn.conf ] ; then 
    echo "APRS:\n{ Call = \"BootstrapRequired\";\n" > /home/ogn/rtlsdr-ogn.conf
fi;

# this is until we actually have a file that we can install... we copy the correct one later on
 /home/ogn/update -i

# and remove it if we made it - not necessary
if [ -e /home/ogn/rtlsdr-ogn-bootstrap ] ; then
    rm -rf /home/ogn/rtlsdr-ogn-bootstrap
fi;

progress "Adding startup scripts - this will produce warnings about LSB tabs"

curl ${downloadpath}'rtlsdr-ogn' -R -# -o /etc/init.d/rtlsdr-ogn
curl ${downloadpath}'rtlsdr-ogn.conf' -R -# -o /etc/rtlsdr-ogn.conf
chmod +x /etc/init.d/rtlsdr-ogn

cp rtlsdr-ogn/Template.conf /home/ogn/rtlsdr-ogn.conf
chown ogn /home/ogn/rtlsdr-ogn.conf
if [ -e /etc/systemd ] ; then
    curl ${downloadpath}'rtlsdr-ogn.service' -R -# -o /etc/systemd/system/rtlsdr-ogn.service
fi;

if [ "$online" != "1" ] ; then
    curl ${downloadpath}'httpi' -R -# -o /usr/local/bin/httpi
    curl ${downloadpath}'first-install' -R -# -o /etc/init.d/first-install
    chmod +x /etc/init.d/first-install /usr/local/bin/httpi
    ##new systemctl calls
    if [ -e /etc/systemd ] ; then
        systemctl enable first-install
        systemctl disable rtlsdr-ogn.service
    else
        update-rc.d first-install defaults
        update-rc.d rtlsdr-ogn remove
    fi;
    touch /etc/ssh/ssh_host_keyswrong    

    progress "Done.  Please reboot your device.  You will be able to configure it at https://ognconfig.onglide.com when it reboots"
    #progress "Also, you may wish to update your operating system"

    if [ "$updated" != "1" ] ; then
    error "You may need to upgrade your operating system as well"
    fi
else

    if [ -e /etc/systemd ] ; then
        systemctl disable first-install
        systemctl enable rtlsdr-ogn.service
    else
        update-rc.d first-install remove
        update-rc.d rtlsdr-ogn defaults
    fi;

    progress "You device is ready for configuration.  Please edit the configuration file: /home/ogn/rtlsdr-ogn.conf"
    progress "And then reboot"

    if [ $updated != "1" ] ; then
        error "You may need to upgrade your operating system as well"
    fi

fi
